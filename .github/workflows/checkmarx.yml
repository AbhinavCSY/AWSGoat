name: Checkmarx Sarif Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '18 2 * * 5'

permissions:
  security-events: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkmarx scan
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: https://deu.iam.checkmarx.net/
          cx_client_id: ${{ secrets.CX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}
          cx_tenant: ${{ secrets.CX_TENANT }}
          additional_params: --report-format sarif --output-path .

      - name: Validate SARIF file
        run: |
          if ! jq . cx_result.sarif > /dev/null; then
            echo "SARIF file is invalid JSON."
            exit 1
          fi

      - name: Add code snippets to SARIF
        run: |
          jq -r '
            .runs[].results[] |
            select(.locations[]? != null) |
            .locations[] |
            .physicalLocation.artifactLocation.uri as $uri |
            .physicalLocation.region.startLine as $startLine |
            .physicalLocation.region.endLine as $endLine |
            "\($uri) \($startLine) \($endLine)"
          ' cx_result.sarif | while IFS=' ' read -r uri startLine endLine; do
            if [ -f "$uri" ]; then
              snippet=$(sed -n "${startLine},${endLine}p" "$uri" | \
                awk '{print "{\"line\": " NR ", \"code\": \"" $0 "\"}"}' | \
                jq -s .)
              jq --arg uri "$uri" --argjson snippet "$snippet" '
                .runs[].results[] |
                select(.locations[].physicalLocation.artifactLocation.uri == $uri) |
                .locations[].physicalLocation.snippet = { "lines": $snippet }
              ' cx_result.sarif > tmp.sarif && mv tmp.sarif cx_result.sarif
            fi
          done

      - name: Upload SARIF file to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: cx_result.sarif

      - name: Push SARIF file to CSPM panel
        run: |
          curl --location '${{ secrets.CSPM_URL }}/api/v1/artifact/?tenant_id=${{ secrets.TENANT_ID }}&data_type=CMX&save_to_s3=true&label_id=${{ secrets.LABEL_ID }}' \
            --header 'Tenant-Id: ${{ secrets.TENANT_ID }}' \
            --header 'Authorization: Bearer ${{ secrets.CSPM_TOKEN }}' \
            --form 'file=@./cx_result.sarif'
