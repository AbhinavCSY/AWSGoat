name: Checkmarx Sarif Integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '18 2 * * 5'

permissions:
  security-events: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkmarx scan
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: https://deu.iam.checkmarx.net/
          cx_client_id: ${{ secrets.CX_CLIENT_ID }}
          cx_client_secret: ${{ secrets.CX_CLIENT_SECRET }}
          cx_tenant: ${{ secrets.CX_TENANT }}
          additional_params: --report-format sarif --output-path .

      - name: Fix SARIF file levels
        run: |
          jq 'walk(if type == "object" and has("level") then .level |= (if . == "none" or . == "note" or . == "warning" or . == "error" then . else "note" end) else . end)' cx_result.sarif > tmp.sarif && mv tmp.sarif cx_result.sarif

      - name: Append GitHub metadata to SARIF
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
        run: |
          jq --arg repo "$GITHUB_REPOSITORY" \
             --arg sha "$GITHUB_SHA" \
             --arg ref "$GITHUB_REF" \
             --arg run_id "$GITHUB_RUN_ID" \
             --arg run_number "$GITHUB_RUN_NUMBER" \
             '.runs[0].invocations += [{
                "executionSuccessful": true,
                "toolExecutionNotifications": [],
                "toolConfigurationNotifications": [],
                "properties": {
                  "repository": $repo,
                  "commit": $sha,
                  "ref": $ref,
                  "workflow_run_id": $run_id,
                  "workflow_run_number": $run_number
                }
              }]' cx_result.sarif > tmp.sarif && mv tmp.sarif cx_result.sarif

      - name: Extract and Embed Code Snippets in SARIF
        id: embed_snippets
        run: |
          # Create a temporary SARIF file with embedded snippets
          cp cx_result.sarif tmp_sarif_with_snippets.sarif
          
          # Extract locations and snippets
          jq -r '.runs[0].results[] | .locations[]? | select(.physicalLocation.artifactLocation.uri != null) | "\(.physicalLocation.artifactLocation.uri) \(.physicalLocation.region.startLine) \(.physicalLocation.region.startColumn) \(.physicalLocation.region.endColumn)"' cx_result.sarif | while read -r uri start_line start_col end_col; do
            # Remove leading ./ for correct path handling
            file_path=$(echo "$uri" | sed 's#^#./#')
            
            # Check if file exists
            if [ -f "$file_path" ]; then
              # Extract the code snippet considering the column start and end
              snippet=$(sed -n "${start_line}p" "$file_path" | cut -c "$start_col"-"$end_col")
              
              # Embed snippet into SARIF
              jq --arg uri "$uri" \
                 --arg start_line "$start_line" \
                 --arg start_col "$start_col" \
                 --arg end_col "$end_col" \
                 --arg snippet "$snippet" \
                 '(.runs[0].results[] | select(.locations[]?.physicalLocation.artifactLocation.uri == $uri) | .locations[].physicalLocation.region.contextRegion) |= { "startLine": $start_line, "snippet": { "text": $snippet, "language": "plaintext" }}' \
                 tmp_sarif_with_snippets.sarif > tmp_sarif_with_snippets_updated.sarif && mv tmp_sarif_with_snippets_updated.sarif tmp_sarif_with_snippets.sarif
            else
              echo "File not found: $file_path" >> tmp_sarif_with_snippets.sarif
            fi
          done

      - name: Upload SARIF file with code snippets
        uses: actions/upload-artifact@v3
        with:
          name: sarif-results-with-snippets
          path: tmp_sarif_with_snippets.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: tmp_sarif_with_snippets.sarif

      - name: Push SARIF file to CSPM panel
        run: |
          curl --location '${{ secrets.CSPM_URL }}/api/v1/artifact/?tenant_id=${{ secrets.TENANT_ID }}&data_type=CMX&save_to_s3=true&label_id=${{ secrets.LABEL_ID }}' \
            --header 'Tenant-Id: ${{ secrets.TENANT_ID }}' \
            --header 'Authorization: Bearer ${{ secrets.CSPM_TOKEN }}' \
            --form 'file=@./tmp_sarif_with_snippets.sarif'
